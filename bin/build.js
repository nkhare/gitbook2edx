// Generated by LiveScript 1.3.1
(function(){
  var fs, debug, marked, files, Liquid, engine, datejs, _module;
  fs = require('fs');
  debug = require('debug')(__filename);
  marked = require('marked');
  files = {
    '/course.xml': fs.readFileSync(__dirname + '/../template/course.xml', 'utf-8'),
    '/about/overview.html': fs.readFileSync(__dirname + '/../template/overview.html', 'utf-8'),
    '/about/short_description.html': fs.readFileSync(__dirname + '/../template/short_description.html', 'utf-8')
  };
  Liquid = require("liquid-node");
  engine = new Liquid.Engine;
  datejs = require('moment');
  engine.registerFilters({
    markdown: function(input){
      if (input != null) {
        debug("Invoking markdown on " + input);
        return marked(input);
      } else {
        return "";
      }
    },
    datejs: function(input){
      var d;
      if (input != null) {
        d = datejs(new Date(input)).toISOString();
        debug("Converted " + input + " to " + d);
        return d;
      } else {
        return "";
      }
    }
  });
  _module = function(){
    var build;
    build = function(data){
      var output, k, ref$, v;
      output = {};
      for (k in ref$ = files) {
        v = ref$[k];
        output[k] = engine.parseAndRender(v, data);
      }
      return {
        metadata: data,
        files: output
      };
    };
    return {
      build: build
    };
  };
  module.exports = _module();
}).call(this);
