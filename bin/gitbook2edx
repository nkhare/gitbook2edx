#!/usr/bin/env node
// Generated by LiveScript 1.3.1
(function(){
  var docopt, _, fs, build, condense, write, gitbook, doc, getOption, o, sourceDir, bookDir, yamlConfig;
  docopt = require('docopt').docopt;
  _ = require('lodash');
  fs = require('fs');
  build = require('./build').build;
  condense = require('./condense').condense;
  write = require('./write').write;
  gitbook = require('./gitbook').gitbook;
  doc = "Usage:\n    gitbook2edx json DIR [ -c CONFIG ]\n    gitbook2edx build DIR [ -c CONFIG ]\n    gitbook2edx gen DIR [ -c CONFIG ]\n    gitbook2edx -h | --help \n\nOptions:\n    -h, --help              Just this help\n    -c, --config CONFIG     file name of the YAML configuration of the course\n\nArguments:\n    DIR             directory to condense into a json file\n";
  getOption = function(a, b, def, o){
    if (!o[a] && !o[b]) {
      return def;
    } else {
      return o[b];
    }
  };
  o = docopt(doc);
  sourceDir = o['DIR'];
  bookDir = sourceDir + "/_book";
  yamlConfig = getOption('-c', '--config', sourceDir + "/config.yaml", o);
  if (o['json']) {
    gitbook(sourceDir).then(function(){
      return condense(bookDir, sourceDir, yamlConfig);
    }).then(function(it){
      return console.log(JSON.stringify(it, 0, 4));
    });
  }
  if (o['build']) {
    gitbook(sourceDir).then(function(){
      return condense(bookDir, sourceDir, yamlConfig);
    }).then(build).then(function(it){
      return console.log(it);
    });
  }
  if (o['gen']) {
    gitbook(sourceDir).then(function(){
      return condense(bookDir, sourceDir, yamlConfig);
    }).then(build).then(write);
  }
}).call(this);
